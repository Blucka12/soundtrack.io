extends layout

block content

  #stage
    .row-fluid
      .span3.well
        #current-track
          input(type="hidden", name="current-track-id")

          //-h2#track-title #{room.playlist[0].title}
          #track-info
            #attribution
              #track-curator.pull-right
              a#track-artist(href="#", data-for="current-track-artist") Artist Name
            marquee
              a#track-title(href="#") foo
          #track-progress.progress.active
            .bar(style="width: 0%;")
            span#time 00:00

        .row-fluid
          .span2
            a.btn.btn-mini(href="#", data-action="toggle-volume", data-intro="<h5>Welcome to soundtrack.io!</h5>  Since you're new and we're polite, we've muted the sound.  You can turn it on here.", data-step="1", data-position="right")
              i.icon-volume-up
          .span9
            input.slider(type="text", name="volume", value="80", data-slider-min="0", data-slider-max="100", data-slider-value="80")

        if (user)
          .btn-group
            a.btn(href="#", onclick="$.post('/skip'); return false;") skip

          .btn-group.pull-right
            a.btn(href="#playlist-modal", data-toggle="modal") your playlists
            a.btn.dropdown-toggle(href="#", data-toggle="dropdown") add 
              span.caret
            ul.dropdown-menu#user-playlists-dropdown(data-for="user-playlists")
              for playlist in playlists
                li(data-playlist-id="#{playlist._id}")
                  a(data-playlist-id="#{playlist._id}", data-action="save-track") #{playlist.name}
              li(data-action="new-playlist")
                a(href="#create-playlist-modal", data-toggle="modal") Create New &raquo;

        //-h3#playlist-summary(ng-bind="'Playlist (' + tracks.length + ')'")
        #playlist
          ul#playlist-list.nav.nav-list(data-intro="If the playlist ever reaches zero, soundtrack.io will automatically choose song based on what's been played in the past.", data-step="3", data-position="right")
            li(ng-repeat="track in tracks", ng-class="{active: $first}", data-track-id="{{track._id}}")
              .playlist-controls
                .score.badge {{track.score}}
                i.icon-chevron-up(data-action="upvote-track", data-track-id="{{track._id}}")
                i.icon-chevron-down(data-action="downvote-track", data-track-id="{{track._id}}")
              img.thumbnail-medium.pull-left(ng-src="{{track.images.thumbnail.url}}")
              span(style="font-size: 0.75em;") {{track.curator.username}} wants to play 
              a(href="/{{track._artist.slug}}/{{track.slug}}/{{track._id}}")
                small.pull-right {{track.duration.toString().toHHMMSS()}}
                span {{track._artist.name}} &mdash; {{track.title}}

        h5 Add Track
        form#search-form.input-append(style="display:block;", data-for="track-search")
          if (user)
            input.input-block-level(type="text", placeholder="type here and press [ENTER] to search", data-intro="<h5>Queue a song!</h5>Search here for a track to add it to the playlist.", data-step="2", data-position="right")#search-query
            button.btn(type="submit")
              i.icon-share-alt
          else
            input.input-block-level(type="text", disabled, placeholder="you must be registered to do this!", data-intro="<h5>Queue a song!</h5>Search here for a track to add it to the playlist.", data-step="2", data-position="top")#search-query

      .span6
        //-#screen-two
          video(height="300", width="570")
            source(src=((room.playlist[0].sources.youtube.length) ? '//www.youtube.com/watch?v=' + room.playlist[0].sources.youtube[0].id : '//foo.bar'), type="video/youtube")
          audio(height="300", width="570")
            source(src=((room.playlist[0].sources.soundcloud.length) ? '//api.soundcloud.com/tracks/' + room.playlist[0].sources.soundcloud[0].id + '/stream?client_id=' + config.soundcloud.id : '//foo.bar'), type="audio/mpeg")
        #screen-one
          .screen-inner#screen-inner
          .sound(style="background: black; height: 0; text-align: center; display:none; margin-bottom: 5px;")
            img(src="http://soundtrack.io/img/laughing-man.png", style="height: 300px;")

          //-iframe#soundcloud-player
        .chat-container
          #messages.fadeout-top
            each message in messages
              include partials/message
          form#chat-form.input-append(style="display:block;")
            if (user)
              input.input-block-level(type="text", autocomplete="off", placeholder="click here to join the conversation")#chat-input
              button.btn(type="submit")
                i.icon-share-alt
              button.btn(data-action="toggle-video")
                i.icon-chevron-up
            else
              input.input-block-level(type="text", autocomplete="off", disabled, placeholder="click here to join the conversation")#chat-input

      #decks
        #slot-1
        #slot-2
        #slot-3
        #slot-4
        #slot-5

      .span3.well(data-intro="<h5>Music is social!</h5>You can chat with all the other listeners here.  They're listening to the same exact music, at the same time!", data-step="4", data-position="left")
        #audience
          h3 
            small.pull-right.user-count
            | Users
          ul.nav.nav-list#userlist(data-intro="<h5>One last thing...</h5>We're a work in progress, so you'll have to mind your step.  Until we implement AngularJS, you'll have to middle-click or ctrl+click these links to prevent them from interrupting the music.  Other than that, <strong>please enjoy!</strong>", data-step="5", data-position="left")

  if (!user)
    script.
      registered = false;
  else
    script.
      registered = true;

    #playlist-modal.modal.hide.fade
      .modal-header
        button.close(data-dismiss="modal") &times;
        h3 Your Playlists
      .modal-body
        .row-fluid
          .span4
            i.icon-globe(title="public")
            ul.nav.nav-list(data-for="user-playlists")
              for playlist in playlists
                li(data-playlist-id="#{playlist._id}")
                  a(href="/#{user.slug}/#{playlist.slug}")
                    small.pull-right #{playlist._tracks.length}
                    input(type="checkbox", data-action="toggle-playlist-visibility", data-playlist-id="#{playlist._id}", checked=(playlist.public ? "checked" : undefined))
                    |  #{playlist.name}
          .span8
            h4 Tracks

      .modal-footer
        button.btn.btn(data-dismiss="modal") Cancel
        button.btn.btn-primary.btn-large(data-dismiss="modal") Done

    form#create-playlist-form(action="/#{user.slug}/playlists", method="post")
      #create-playlist-modal.modal.hide.fade
        .modal-header
          button.close(data-dismiss="modal") &times;
          h3 Create Playlist
        .modal-body
          label(required="required") Name
          input(type="text", name="name")

          label(required="required") Description
          textarea(type="text", name="description")

          label
            input(type="checkbox", name="public", value="true", checked)
            |  
            i.icon-globe
            |  Public

          h4 You'll be adding the following track:
          h5
            span.track-artist foo
            |  &mdash; 
            span.track-title bar

        .modal-footer
          button.btn.btn(data-dismiss="modal") Cancel
          button.btn.btn-primary.btn-large(type="submit") Create Playlist &raquo;

    #search-modal.modal.hide.fade
      .modal-header
        button.close(data-dismiss="modal") &times;
        h3 Track Search
      .modal-body
        form#search-form.input-append(data-for="track-search")
          input(type="text", data-for="track-search-query")
        ul.nav.nav-list.search-results(data-for="track-search-results")

      .modal-footer
        button.btn.btn(data-dismiss="modal") Cancel
        button.btn.btn-primary.btn-large(data-dismiss="modal") Done

block scripts
  script.
    var soundcloudID = "#{config.soundcloud.id}";
    SC.initialize({
      client_id: "#{config.soundcloud.id}"
    });